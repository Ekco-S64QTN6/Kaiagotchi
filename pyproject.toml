[build-system]
requires = ["setuptools>=61.0.0"]
build-backend = "setuptools.build_meta"

[project]
name = "kaiagotchi"
version = "0.1.0"
description = "Kaia AI - The Autonomous Technical Counterpart"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "GPL-3.0-only"}
keywords = ["ai", "headless", "python", "manager", "agent"]

# Corrected list formatting for robust parsing
authors = [
    {name = "Michael Schellhorn", email = "michael.schellhorn@example.com"}
]
maintainers = [
    {name = "Ekco", email = "ekco-s64qtn6@example.com"},
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Security",
    "Environment :: Console",
    "Operating System :: POSIX :: Linux",
    "Typing :: Typed",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
]

dependencies = [
    # === Core Data & Serialization ===
    "PyYAML",                        # YAML configuration parsing
    "tomlkit",                       # TOML configuration parsing
    
    # === Web & API Framework ===
    "flask",                         # Web UI framework
    "flask-cors",                    # CORS support
    "flask-wtf",                     # Form handling & CSRF protection
    "websockets",                    # Real-time WebSocket communication
    "requests>=2.32.3",              # HTTP client with security updates
    
    # === System Integration ===
    "dbus-python; sys_platform == 'linux'", # Linux D-Bus integration
    "file-read-backwards",           # Efficient log file reading
    "python-prctl>=1.8.1; sys_platform == 'linux'", # Process control for Linux
    
    # === Cryptography & Security ===
    # ADDED: Required for 'from Crypto...' imports (PyCryptodome)
    "pycryptodome>=3.17", 
    "cryptography>=42.0.8",           # Modern cryptography (replaces pycryptodome)
    
    # === Data Processing ===
    "numpy",                         # Numerical computing
    "python-dateutil",               # Date/time utilities
    
    # === External Integrations ===
    "pydrive2",                      # Google Drive API
    "tweepy",                        # Twitter API
    
    # === Network Analysis ===
    "scapy>=2.5.0",                  # Packet manipulation & PCAP parsing
    
    # === Modern Architecture ===
    "pydantic>=2.7.4",               # Data validation & settings
    "pydantic-settings>=2.2.1",      # Configuration management
    
    # === System Monitoring ===
    "psutil>=5.9.0",                 # System and network monitoring
    
    # === Development & ML (Consider making optional) ===
    "gast",                          # Generic AST (ML framework dependency)
    "shimmy",                        # RL environment compatibility
    
    # === NEW: Hardware & Plugin Dependencies ===
    "RPi.GPIO; sys_platform == 'linux'",      # Raspberry Pi GPIO
    "smbus2; sys_platform == 'linux'",        # I2C communication (better than smbus)
    "toml",                                   # TOML parsing for plugins
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "mock-GPIO",                     # Mock RPi.GPIO for development
]
ml = [
    "gast",
    "shimmy",
]
full = [
    "RPi.GPIO",
    "smbus2", 
    "toml",
    "bettercap",                     # Packet capture framework
    "hcxpcapngtool",                 # PCAP conversion tool
]

[project.urls]
Homepage = "https://github.com/Ekco-S64QTN6/kaiagotchi"
"Bug Tracker" = "https://github.com/Ekco-S64QTN6/kaiagotchi/issues"
Documentation = "https://github.com/Ekco-S64QTN6/kaiagotchi#readme"

[project.scripts]
kaiagotchi = "kaiagotchi.cli:kaiagotchi_cli"

[tool.setuptools.packages.find]
include = ["kaiagotchi", "kaiagotchi.*"]
exclude = ["tests*", "docs*", "scripts*"]

# ===== Code Quality & Formatting =====
[tool.black]
line-length = 88
target-version = ["py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
    | \.eggs
    | \.git
    | \.venv
    | build
    | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",  
    "W",    
    "F",  
    "I",  
    "B",  
    "C4", 
    "UP", 
]
ignore = [
    "B008", 
    "I001", 
    "E501", 
]
unfixable = ["B008", "B009", "F401"]

[tool.ruff.isort]
known-first-party = ["kaiagotchi"]
known-third-party = [
    "pydantic", "pydantic_settings", "requests", "cryptography", "pycryptodome", 
    "PyYAML", "dbus_python", "file_read_backwards", "flask", 
    "flask_cors", "flask_wtf", "gast", "numpy", "pydrive2", 
    "python_dateutil", "scapy", "shimmy", "tomlkit", "tweepy", 
    "websockets", "psutil", "prctl", "RPi", "smbus2", "toml"
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  

# ===== Static Type Checking =====
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "flask.*",
    "tweepy.*", 
    "pydrive2.*",
    "RPi.*",
    "smbus2.*"
]
disallow_untyped_defs = false

# ===== Testing =====
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--tb=short",
    "--durations=10",
]
asyncio_mode = "strict"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "hardware: marks tests that require hardware",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]